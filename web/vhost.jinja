# hostname
# host_type = vhost
# host
# locations
# ssl_type

{% set otherport = '80' %}

{% if ssl_type %}
{% if ssl_type == "pass" %}
{% set otherport = '443' %}
{% endif %}

server {
  listen 80;
  listen [::]:80;
  server_name {{ hostname }};
  {% for alias in aliases %}
  server_name {{ alias }};
  {% endfor %}

  {% if ssl_type == "letsencrypt" %}
  location /.well-known {
    default_type text/plain;
    root /srv/http/letsencrypt;
  }
  {% endif %}

  {% if ssl_type == "pass" %}
  {% for path, loc in locations.items() %}
  location {{ path }} {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass http://{{ loc.get('host', 'localhost') }}:{{ loc.get('port', '80') }}{{ loc.get('path', '/') }};
  }
  {% endfor %}
  {% else %}
  location / {
    return 301 https://{{ hostname }}$request_uri;
  }
  {% endif %}
}

server {
  listen 443;
  listen [::]:443;
  server_name {{ hostname }};
  {% for alias in aliases %}
  server_name {{ alias }};
  {% endfor %}

  access_log /var/log/nginx/{{ hostname }}-ssl;

  {% if ssl_type != "pass" %}
  ssl on;
  {% if ssl_type == "star" %}
  ssl_certificate /etc/nginx/ssl/wildcard.hackafe.net.cert;
  ssl_certificate_key /etc/nginx/ssl/wildcard.hackafe.net.key;
  {% elif ssl_type in ("manual", "letsencrypt") %}
  ssl_certificate /etc/nginx/ssl/{{ hostname }}.cert;
  ssl_certificate_key /etc/nginx/ssl/{{ hostname }}.key;
  {% endif %}
  {% endif %}
{% else %}
server {
  listen 80;
  listen [::]:80;
  server_name {{ hostname }};

  access_log /var/log/nginx/{{hostname}};
{% endif %}

{% if ssl_type == "letsencrypt" %}
  location /.well-known {
    default_type text/plain;
    root /srv/http/letsencrypt;
  }
{% endif %}
{% for path, loc in locations.items() %}
  location {{ path }} {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass http://{{ loc.get('host', 'localhost') }}:{{ loc.get('port', otherport) }}{{ loc.get('path', '/') }};
  }
{% endfor %}
}
